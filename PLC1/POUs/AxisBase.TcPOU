<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="AxisBase" Id="{3d7477b0-9d98-46c9-b003-cf67f4daff27}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK AxisBase
VAR_INPUT
END_VAR
VAR_OUTPUT

END_VAR
VAR
	axis : AXIS_REF;
	fbPower : MC_Power;
	bEnablePositiveMovement AT %I* : BOOL := TRUE; //Feed enable in positive direction.
	bEnableNegativeMovement AT %I* : BOOL := TRUE; //Feed enable in negative direction.
	
	fbHome : MC_Home;
	

	
	AxisHomed : BOOL;
	
	MaxTorque : LREAL;
	fbSoEread : FB_SoERead;
	
	//reset
	fbReset : MC_Reset;
	fBias: LREAL;
	fbSoeReset: FB_SoEReset;

	
	pActPosAdress : POINTER TO LREAL := 0;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[axis.ReadStatus();

AuxiliaryFunctions(axis);


	
fbPower(
	Axis:= axis, 
	Enable:= , 
	Enable_Positive:= bEnablePositiveMovement, 
	Enable_Negative:= bEnableNegativeMovement, 
	Override:= 100, 
	BufferMode:= ,
	Options:= , 
	Status=> , 
	Busy=> , 
	Active=> , 
	Error=> , 
	ErrorID=> );
	

fbHome(
	Axis:= axis, 
	Execute:= , 
	Position:= , 
	HomingMode:= MC_HomingMode.MC_Direct, 
	BufferMode:= , 
	Options:= , 
	bCalibrationCam:= , 
	Done=> , 
	Busy=> , 
	Active=> , 
	CommandAborted=> , 
	Error=> , 
	ErrorID=> );
	

fbSoEread(
Axis:= axis, 
NetId:= '', 
Idn:= S_0_IDNs + 82, 
Element:= 16#40, 
pDstBuf:= ADR(MaxTorque), 
BufLen:= SIZEOF(MaxTorque), 
Execute:= , 
Timeout:= , 
Busy=> , 
Error=> , 
AdsErrId=> , 
SercosErrId=> , 
Attribute=> );
	


IF fbSoeReset.Execute AND fbSoeReset.Busy THEN
	fbReset.Execute := FALSE;
END_IF

fbSOEReset(
	Axis:= axis , 
	NetId:= , 
	Execute:= , 
	Timeout:= , 
	Busy=> , 
	Error=> , 
	AdsErrId=> , 
	SercosErrId=> );
	

IF(pActPosAdress = 0) THEN
	pActPosAdress := ADR(axis.NcToPlc.ActPos);
END_IF]]></ST>
    </Implementation>
    <Method Name="AuxiliaryFunctions" Id="{66dbbb86-a765-402b-94ea-bc3bf83ff02b}">
      <Declaration><![CDATA[METHOD AuxiliaryFunctions : BOOL
VAR_INPUT
	axis : AXIS_REF;
END_VAR
VAR
	ReadMotorTemp  : BOOL;
	//fbBrakeControl : FB_BrakeControl;
	MotorTemperature: INT;
	Execute: INT;
	Timeout: INT;
	Busy: INT;
	fbReadMotorTemp: FB_SoEReadMotorTemperature;
	fbReadAmplifierTemp: FB_SoEReadAmplifierTemperature;
	
	fbClearEC : FB_EcMasterFrameStatisticClearTxRxErr;
	fbManualBrakeControlAX8000 : FB_CoEAX8000BrakeControl;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
fbReadMotorTemp(
	Axis :=axis,
	NetId := ,
	Execute := ,
	Timeout := ,
	Busy => ,
	Error => ,
	AdsErrId => ,
	SercosErrId => ,
	MotorTemperature =>,
	Attribute => );
	
fbReadAmplifierTemp(
	Axis :=axis,
	NetId := ,
	Execute := ,
	Timeout := ,
	Busy => ,
	Error => ,
	AdsErrId => ,
	SercosErrId => ,
	AmplifierTemperature =>,
	Attribute => );
(*
IF ReadMotorTemp THEN
	
fbBrakeControl(

 fbBrakeControl( 
    Axis            := Axis,
    Execute         := TRUE,
    Timeout         := DEFAULT_ADS_TIMEOUT,
    MotorTemperature => MotorTemperature
 );
 IF NOT fbReadMotorTemp.Busy THEN
    fbReadMotorTemp(Axis := Axis, Execute := FALSE);
    ReadMotorTemp := FALSE;
 END_IF
END_IF 
*)
fbClearEC(sNetId := ,
	nEcMasterDevID := ,
	bExecute :=,
	tTimeout:=,
	bBusy =>,
	bError=>,
	nErrId=>);
	
fbManualBrakeControlAX8000(
	Axis := axis,
	Execute:=,
	Mode:=,
	Busy =>,
	Error=>,
	ErrorID=>);]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="AxisBase">
      <LineId Id="1219" Count="0" />
      <LineId Id="1223" Count="18" />
      <LineId Id="1326" Count="15" />
      <LineId Id="1367" Count="15" />
      <LineId Id="1396" Count="14" />
      <LineId Id="1570" Count="0" />
      <LineId Id="1620" Count="0" />
      <LineId Id="1619" Count="0" />
      <LineId Id="1621" Count="1" />
    </LineIds>
    <LineIds Name="AxisBase.AuxiliaryFunctions">
      <LineId Id="68" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="69" Count="9" />
      <LineId Id="80" Count="0" />
      <LineId Id="82" Count="9" />
      <LineId Id="81" Count="0" />
      <LineId Id="10" Count="1" />
      <LineId Id="28" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="12" Count="9" />
      <LineId Id="5" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="37" Count="5" />
      <LineId Id="36" Count="0" />
      <LineId Id="44" Count="7" />
    </LineIds>
  </POU>
</TcPlcObject>